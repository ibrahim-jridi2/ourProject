version: "3.9"
services:
#keycloak-databases: (ibrahim)
  postgresql:
    container_name: postgres1
    image: postgres:14.4
    restart: always
    ports:
      - "5433:5432"   # External port access for the development profile
    environment:
      POSTGRES_PASSWORD: admin
      POSTGRES_USER: admin
      POSTGRES_DB: keycloak

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    restart: always
    ports:
      - "81:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin

  keycloak:
    image: quay.io/keycloak/keycloak:20.0.0
    volumes:
      - D:\esprit\2eme-annee\microservice\realm-export.json:/tmp/realm-export.json
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgresql:5432/keycloak
      KC_DB_USERNAME: admin
      KC_DB_PASSWORD: admin
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KEYCLOAK_IMPORT: /tmp/realm-export.json
      # Uncomment the line below if you want to specify JDBC parameters. The parameter below is just an example, and it shouldn't be used in production without knowledge. It is highly recommended that you read the PostgreSQL JDBC driver documentation in order to use it.
      #JDBC_PARAMS: "ssl=true"
    ports:
      - "8081:8081"
    command: [ "start-dev", "--http-port=8081" ]
    depends_on:
      - postgresql
  postgres:
    container_name: db
    image: "postgres:14.4"
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "postgres" ]
      timeout: 45s
      interval: 10s
      retries: 10
    volumes:
      # change this to your local path
      - postgres_data:/d/esprit/2eme-annee/microservice/postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: keycloak
      POSTGRES_HOST: postgres
      # - "POSTGRES_HOST_AUTH_METHOD=trust"
    # networks:
    #   - local
    ports:
      - "5432:5432"

  # keycloak:
  #   container_name: keycloak
  #   build:
  #     context: .
  #     args:
  #       KEYCLOAK_VERSION: 22.0.0
  #   command: ['start', '--optimized', '--import-realm']
  #   depends_on:
  #     - "postgres"
  #   environment:
  #     JAVA_OPTS_APPEND: -Dkeycloak.profile.feature.upload_scripts=enabled
  #     KC_DB_PASSWORD: postgres
  #     KC_DB_URL: jdbc:postgresql://postgres/keycloak
  #     KC_DB_USERNAME: postgres
  #     KC_HEALTH_ENABLED: 'true'
  #     KC_HTTP_ENABLED: 'true'
  #     KC_METRICS_ENABLED: 'true'
  #     KC_HOSTNAME_URL: http://localhost:8180
  #     KC_PROXY: reencrypt
  #     KEYCLOAK_ADMIN: admin
  #     KEYCLOAK_ADMIN_PASSWORD: password
  #   ports:
  #     - "8180:8080"
  #     - "8787:8787" # debug port
  #   networks:
  #     - local
  #   volumes:
  #     - ./my-test-realm-realm.json:/opt/keycloak/data/import/my-test-realm-realm.json

#eureuka server (ibrahim)
  eurekaserver:
    container_name: eurekaserver
    build:
      context: ./../EurekaSever
    ports:
      - "8761:8761"
    image: "eur"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eurekaserver:8761/eureka/


# auth micro (ibrahim): 
  auth-micro-app:
    build:
      context: ./../spring-app
    ports:
      - "8080:8761"
    image: "auth-micro"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eurekaserver:8761/eureka/
      # SPRING_APPLICATION_JSON: '{"spring.datasource.url": "jdbc:postgresql://postgres1:5433/keycloak?allowPublicKeyRetrieval=true&useSSL=false&createDatabaseIfNotExist=true", "spring.datasource.username": "admin", "spring.datasource.password": "admin", "spring.jpa.properties.hibernate.dialect": "org.hibernate.dialect.PostgreSQLDialect", "spring.jpa.hibernate.ddl-auto": "update", "eureka.client.service-url.defaultZone": "http://localhost:8761/eureka", "eureka.client.register-with-eureka": true}'
    depends_on:
      - postgresql

#reservation micro (ayed):
  reservation-micro:
    build:
      context: ../reservation_Micro
    ports:
      - "8091:8091"
    image: "reservation"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eurekaserver:8761/eureka/
# #gateway micro (ibrahim): 
  gateway-micro:
    build:
      context: ../API_GATEWAY_SERVE
    ports:
      - "9999:8761"
    image: "gateway"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eurekaserver:8761/eureka/


### (amani bouhrira)


  feedback-servicee-appl:
    build: ../feedback-module
    # restart: always
    command:  sh -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    env_file:
      - .env
    ports:
      - "127.0.0.1:8000:8000"
    volumes:
      - .:/code
    # networks:
    #   - local
    links:
      - postgres
    depends_on:
       - postgres
       - eurekaserver
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eurekaserver:8761/eureka/

    
  mysqldb:
    container_name: mysqldb
    image: mysql:latest
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=root
    # networks:
    #   - springapimysql-net
    ports:
      - 3306:3306
    volumes:
      - mysql_data:/var/lib/mysql
 
  module-comment:
    build:
      context: ../module-comment
    ports:
      - "8084:8084"
    image: "module-comment"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eurekaserver:8761/eureka/
      # SPRING_APPLICATION_JSON: '{"spring.datasource.url": "jdbc:mysql://mysqldb:3306/commentCampingdb?allowPublicKeyRetrieval=true&useSSL=false&createDatabaseIfNotExist=true", "spring.datasource.username": "root", "spring.datasource.password": "root", "spring.jpa.properties.hibernate.dialect": "org.hibernate.dialect.MySQL5InnoDBDialect", "spring.jpa.hibernate.ddl-auto": "update" ,"eureka.client.service-url.defaultZone": "http://localhost:8761/eureka", "eureka.client.register-with-eureka": true}'
   
    depends_on:
      - mysqldb
      # - eurekaserver
    # networks:
    #   - springapimysql-net
      ################################################################
  module-post:
    build:
      context: ../module-post
    ports:
      - "8089:8089"
    image: "module-post"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eurekaserver:8761/eureka/
      # SPRING_APPLICATION_JSON: '{"spring.datasource.url": "jdbc:mysql://mysqldb:3306/postCampingdb?allowPublicKeyRetrieval=true&useSSL=false&createDatabaseIfNotExist=true", "spring.datasource.username": "root", "spring.datasource.password": "root", "spring.jpa.properties.hibernate.dialect": "org.hibernate.dialect.MySQL5InnoDBDialect", "spring.jpa.hibernate.ddl-auto": "update", "eureka.client.service-url.defaultZone": "http://localhost:8761/eureka", "eureka.client.register-with-eureka": true}'

    depends_on:
      - mysqldb
      - eurekaserver
    # networks:
    #   - springapimysql-net
#shop-module(amani nasri):
  shop-micro:
    build:
      context: ../micro-shop
    ports:
      - "8083:8083"
    image: "shop"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eurekaserver:8761/eureka/
    
    depends_on:
      - mysqldb
      - eurekaserver

networks:
  local:
    name: local
    driver: bridge
  springapimysql-net:

volumes:
  postgres_data:
  mysql_data:


 